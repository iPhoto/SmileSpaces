{"name":"Smilespaces","tagline":"SmileSpaces hack for something better repo","body":"![image](http://img198.imageshack.us/img198/5672/lzht.png)\r\n\r\nSmileSpaces is a interesting platform to find the best happy areas in your city according to many factors, curltural, healthy, users... Thanks to our advanced algorith \"Felix\" and exhaustive data analysis. Moreover you'll have a full API REST for implementing your own solution with our data. In our repo you'll find iOS and Android applications to have an idea of what you can do :)\r\n\r\n:smile: Share happiness! :smile:\r\n\r\nTake a look to our VideoLean promo video: https://videolean.com/shares/4eb1f2f3-5ed3-4ce0-9057-edbec56d9a5b\r\n\r\n# Web Server Backend\r\nWe've developed our platform using a python based micro-framework, **Flask**. The reason why we did chose it is that it's very fast, easy to implement and powerful.\r\nAlthough Flask has a Web Server for testing it's not recommended using it out of developing, that's the reason why we've deployed our server using NGINX+GUNICORN. SQLite database is the chosen solution for our initial project.\r\n\r\nIf you want to test it you don't need this configuration. Only download the serverSmile project and execute:\r\n```python\r\npython runSmile.py\r\n```\r\n#### Requiremens\r\n- Python 2.7\r\n- Flask\r\n- Flask-SQLAlchemy\r\n- Flask-Admin\r\n\r\n( You can install all of them using PIP command )\r\n\r\n### API Requests\r\nFile views.py includes all web paths that our API is able to process. Here you have a list of them:\r\n- **/api/1/City**: [GET] To get a list of all the cities\r\n- **/api/1/City/\"cityID\"**: [GET] To get the information of a given city (by ID)\r\n- **/api/1/City/\"cityID\"**: [PUT] Update the information of a given city (by ID)\r\n- **/api/1/City**: [POST] Create a new City\r\n- **/api/1/City/\"cityID\"**: [DELETE] Delete an existing City\r\n- **/api/1/Cell/City/\"cityID\"**: [GET] Get a list of all the zones of a City\r\n- **/api/1/Cell/\"cellID\"**: [GET] Get detailed info for given cell (by ID)\r\n- **/api/1/Cell/\"cellID\"**: [PUT] Update the information of a given Cell (By ID)\r\n- **/api/1/Cell**: [POST] Create a new zone\r\n- **/api/1/Cell/\"cellID\"**: [DELETE] Delete a given zone\r\n- **/api/1/Data/\"cellID\"**: [GET] Get detailed parameters info of a Cell\r\n- **/api/1/Data**: [POST] Create a new data object\r\n- **/api/1/Data/\"dataID\"**: [PUT] Update an existing data object\r\n- **/api/1/Data/\"dataID\"**: [DELETE] Delete an existing data object\r\n\r\n*Note: Some REST request may not be implemented. We're working on these features. Some of them may not be working correctly, sorry for the inconvenience, we are on Alpha :)*\r\n\r\n### Admin view\r\nThanks to Flask-Admin you'll have access to an Admin panel and take control over the backend data. The URL to access it is: http://127.0.0.1:5000/admin\r\n\r\n\r\n# iOS Application\r\niOS application as a location mobile service has a main View with the map of the city ( depending on the version of the App ). In this view you'll be able to have a global sightseing of every zone with a smile/color indicating the happiness of zone. From this view you'll be able to open more details of the zone ( touching in the zone pin ) or share your feeling in the place where you are.\r\n\r\n![image](http://img22.imageshack.us/img22/6086/j2so.png)\r\n\r\n#### Implemented features\r\n- **Hapiness MapView**: Browse happniness around you in your city thanks to this mapView. You'll be able to center it in your location and zoom thanks to pinch gesture. Markers wi'll be expanded like cells!. If you need more details push over one of this.\r\n- **Add feeling to your city database**: Choose your feeling in your current place selecting a color in the gradient selector. We'll calculate your feeling from your color selection. More over ( implemented in the future ) if you connect your social accounts we'll do a semantic analysis to get more information about your current context feeling . Amazing, isn't it? Felix cat we'll do magic with all this data. Photos will be able to be attached in a next release.\r\n- **Zone detail view**: Get more detailed information about any area. Using our chart you'll take a global idea of it according to five parameters Felix has calculated. If you are looking more information, don't worry, scroll down and discover each detailed one in a percentage way.\r\n\r\n### Custom controls\r\nControls that we've created to get better UX in the app:\r\n- **gradientProgress**: Animated gradient progress to add in tableviewCells. It includes a method to reset the progress and to animate it from 0 to a given percentage. \r\n\r\n![image](http://img27.imageshack.us/img27/9710/7zlw.png)\r\n\r\n### External Controls\r\nWe would like to thanks all these control that have helped us to get faster in our development and add interesting features to improve our app. And thanks to CocoaPods too for its 3rd party libraries installation helper. \r\nHere they are:\r\n```\r\npod 'AFNetworking', '~> 1.3.2'\r\npod 'SVProgressHUD'\r\npod 'QuickDialog'\r\npod 'ADClusterMapView'\r\npod 'NullSafe'\r\npod 'UIKitCategoryAdditions', :git => 'https://github.com/pepibumur/UIKitCategoryAddi$\r\npod 'RPRadarChart', :git => 'https://github.com/pepibumur/RPRadarChart.git'\r\npod 'PPiAwesomeButton', :git => 'https://github.com/pepibumur/PPiAwesomeButton.git'\r\npod 'PPiFlatSegmentedControl', :git => 'https://github.com/pepibumur/PPiFlatSegmented$\r\npod 'FlatUIKit'\r\npod 'XMLDictionary'\r\npod 'DKLiveBlur', :git => 'https://github.com/pepibumur/DKLiveBlur.git'\r\npod 'APParallaxHeader'\r\n```\r\n\r\n### Test on your own\r\n1. Clone the repository and open iOS Folder\r\n2. Once in this directory install CocoaPods ( you'll find more information [here](http://cocoapods.org/) about how to do it )\r\n3. After, execute from terminal `pod install` ( be sure you are in the iOS project folder in terminal )\r\n4. If everything goes well you should open the project **from .xcworkspace** file. \r\n\r\n### Some Screenshots\r\n![image](http://imageshack.us/a/img546/4770/txlu.png)\r\n![image](http://imageshack.us/a/img841/6818/0lso.png)\r\n![image](http://imageshack.us/a/img7/3721/cfyh.png)\r\n![image](http://ppinera.es/iOSData/SmileSpaces/smile.gif)\r\n\r\n### Future guidelines\r\n- Introduce polygon layouts in mapview to bound more detailed areas\r\n- Add feeling connection with Server ( including add photo feature in maps )\r\n- Information Screen with some settings.\r\n- Active notifications\r\n- Gamification in users profiles \r\n\r\n## Android\r\nIn the same way as iOS App, the Android app has a similar structure in Controllers ( Including the design ). The project works in Android version from  2.3 Gingerbread until the last version.\r\n\r\n## Test on your own\r\n- Download the project folder\r\n- Open Eclipse ( If you hadn't it installed remember Android Development Kit is required too )\r\n- Once installed, import the project into your Workspace and import Google Play Services Library\r\n- If everything goes right, you should be able to load the project into a physical device or the simulator\r\n\r\n## Screenshots\r\n![image](http://imageshack.us/a/img856/4658/1a9d.png)\r\n ![image](http://img43.imageshack.us/img43/1778/5r6c.png)\r\n\r\n## External controls\r\n- **Asynchronous Http Client for Android**: An asynchronous callback-based HTTP client for Android used by Instagram, Heyzap, Trello and many other large apps. https://github.com/loopj/android-async-http\r\n\r\n## Source\r\nWe've found all these London Feeds to our dababase Backend. The solution is global so in the future is required to adapt this platform to another city we only have to link our system with the new city sources.\r\nSources from London:\r\n- Transport for London: http://www.tfl.gov.uk\r\n- LondonAir API\r\n\r\n\r\n## Team\r\n![image](http://imageshack.us/a/img22/4400/69bw.png)\r\n![image](http://img707.imageshack.us/img707/5892/0m6i.png)\r\n![image](http://img545.imageshack.us/img545/4845/7ifz.png)\r\n![image](http://imageshack.us/a/img546/7083/adv1.png)\r\n\r\n\r\n- **Isaac Roldán**: Web/Backend developer and Felix's father\r\n- **Fran Díaz**: GodFather of Felix and Social Developer\r\n- **LLorens Delgado**: Android Developer and UI/UX designer\r\n- **Pedro Piñera**: iOS Developer and UI/UX designer\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}